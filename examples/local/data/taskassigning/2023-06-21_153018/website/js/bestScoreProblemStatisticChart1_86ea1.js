
var chart_bestScoreProblemStatisticChart1_86ea1 = new Chart(document.getElementById('chart_bestScoreProblemStatisticChart1_86ea1'), {
    type: 'line',
    data: {
        labels: [
            1217, 1223, 1411, 1412, 1532, 1568, 1569, 1753, 1754, 2028, 2029, 2030, 2060, 2112, 2113, 2276, 2281, 2282, 2286, 2288, 2299, 2307, 2309, 2339, 2441, 2442, 2444, 2500, 2528, 2529, 2540, 2541, 2543, 2586, 2588, 2612, 2613, 2851, 2959, 2960, 3013, 3019, 3020, 3077, 3081, 3091, 3106, 3129, 3144, 3157, 3158, 3196, 3213, 3272, 3413, 3676, 3688, 3700, 3702, 3703, 3707, 3844, 3847, 3848, 3852, 3887, 3890, 3967, 4173, 4175, 4185, 4189, 4253, 4254, 4256, 4258, 4318, 4319, 4334, 4336, 4345, 4353, 4375, 4432, 4433, 4673, 4676, 4709, 4724, 4731, 4732, 4784, 4785, 4789, 4826, 4827, 4870, 4976, 5040, 5042, 5250, 5251, 5305, 5306, 5355, 5356, 5360, 5408, 5409, 5559, 5560, 5601, 5636, 5651, 5654, 5657, 5658, 5661, 5769, 5916, 5919, 6000, 6036, 6042, 6046, 6047, 6058, 6088, 6092, 6140, 6189, 6195, 6196, 6429, 6433, 6512, 6550, 6570, 6650, 6656, 6657, 6674, 6675, 6679, 6718, 6855, 6856, 6870, 6872, 7279, 7280, 7530, 7540, 7555, 7559, 7565, 7635, 7642, 7645, 7650, 7698, 7914, 7918, 7923, 7946, 7949, 7953, 7963, 8090, 8104, 8105, 8113, 8371, 8393, 8533, 8536, 8537, 8562, 8675, 8682, 8696, 8699, 8727, 8768, 8778, 8779, 8780, 8956, 8958, 9211, 9225, 9226, 9370, 9457, 9458, 9549, 9655, 9722, 9750, 9751, 9775, 9776, 9777, 9780, 9813, 9822, 9861, 9911, 9912, 9923, 9927, 9929, 10212, 10436, 10437, 10438, 10460, 10462, 10468, 10577, 10876, 10886, 10887, 11384, 11526, 11641, 11645, 11710, 11948, 11961, 11962, 12545, 12986, 12995, 13262, 13331, 13332, 13689, 14401, 14425, 14795, 14796, 15069, 16907, 16927, 21836, 21864, 22030, 25182, 25237, 300000
        ],
        datasets: [
            {
                  label: 'Late Acceptance (favorite)',
                        stepped: true,
                        pointRadius: 0,
                    borderWidth: 4
,
                  data: [
                    -50252, -50000, -49966, -49966, -49916, -49875, -49875, -49849, -49849, -49844, -49830, -49830, -49815, -49766, -49766, -49757, -49735, -49735, -49734, -49734, -49724, -49664, -49664, -49625, -49623, -49623, -49597, -49586, -49584, -49584, -49583, -49583, -49580, -49566, -49566, -49520, -49507, -49488, -49452, -49452, -49425, -49425, -49400, -49399, -49399, -49384, -49382, -49382, -49380, -49380, -49356, -49354, -49354, -49245, -49222, -49212, -49176, -49171, -49171, -49137, -49137, -49119, -49119, -49113, -49113, -49106, -49096, -49054, -49034, -49034, -49024, -49024, -49023, -49023, -49015, -49015, -49012, -49012, -49009, -49009, -49001, -48991, -48973, -48939, -48939, -48927, -48927, -48923, -48919, -48910, -48910, -48909, -48889, -48889, -48865, -48865, -48853, -48849, -48815, -48815, -48795, -48795, -48782, -48782, -48778, -48778, -48754, -48741, -48741, -48726, -48726, -48713, -48712, -48706, -48699, -48699, -48696, -48696, -48692, -48688, -48688, -48682, -48675, -48675, -48665, -48656, -48656, -48646, -48639, -48636, -48636, -48622, -48622, -48620, -48620, -48613, -48611, -48607, -48606, -48589, -48589, -48582, -48561, -48560, -48560, -48557, -48534, -48493, -48493, -48476, -48476, -48475, -48473, -48473, -48469, -48469, -48468, -48468, -48466, -48466, -48460, -48460, -48436, -48436, -48434, -48434, -48427, -48425, -48425, -48424, -48424, -48398, -48398, -48392, -48392, -48386, -48386, -48384, -48384, -48378, -48376, -48376, -48374, -48374, -48367, -48365, -48365, -48352, -48352, -48351, -48327, -48327, -48321, -48318, -48318, -48313, -48313, -48312, -48312, -48306, -48298, -48298, -48295, -48295, -48282, -48282, -48280, -48272, -48272, -48260, -48260, -48250, -48237, -48237, -48234, -48234, -48233, -48233, -48224, -48217, -48215, -48209, -48209, -48208, -48200, -48197, -48197, -48194, -48194, -48188, -48188, -48186, -48186, -48180, -48179, -48177, -48177, -48171, -48171, -48170, -48164, -48164, -48163, -48163, -48151, -48151, -48150, -48149, -48149, -48146, -48146
                  ]
                }
        ]
    },
    options: {
        animation: false,
        responsive: true,
        maintainAspectRatio: false,
        spanGaps: true,
        plugins: {
            title: {
                display: true,
                text: '500tasks-20employees best soft 0 score statistic'
            },
            tooltip: {
                callbacks: {
                        title: function(context) {
                            return humanizeTime(context[0].parsed.x);
                        }
                        
                }
            }
        },
        scales: {
            x: {
                title: {
                    display: true,
                    text: 'Time spent'
                },
                ticks: {
                        stepSize: 1000
                        ,
                        callback: function(value, index) {
                            return humanizeTime(value);
                        }
                },
                suggestedMin: 0,
                suggestedMax: 300000,
                type: 'linear',
                display: true
            },
            y: {
                title: {
                    display: true,
                    text: 'Best soft 0 score'
                },
                ticks: {
                        stepSize: 1000
                        
                },
                suggestedMin: -50252,
                suggestedMax: 0,
                type: 'linear',
                display: true
            }
        },
watermark: {
    image: "website/webjars/timefold/img/timefold-logo-stacked-positive.svg",
    x: 15,
    y: 15,
    width: 48,
    height: 50,
    opacity: 0.1,
    alignX: "right",
    alignY: "bottom",
    alignToChartArea: true,
    position: "front",
}    },
plugins: [{ 
    id: 'customPlugin',
    beforeDraw: (chart, args, options) => {
          const ctx = chart.canvas.getContext('2d');
          ctx.save();
          ctx.globalCompositeOperation = 'destination-over';
          ctx.fillStyle = 'white';
          ctx.fillRect(0, 0, chart.canvas.width, chart.canvas.height);
          ctx.restore();
    }
}]
});

window.addEventListener('beforeprint', () => {
  chart_bestScoreProblemStatisticChart1_86ea1.resize(1280, 720);
});
window.addEventListener('afterprint', () => {
  chart_bestScoreProblemStatisticChart1_86ea1.resize();
});
